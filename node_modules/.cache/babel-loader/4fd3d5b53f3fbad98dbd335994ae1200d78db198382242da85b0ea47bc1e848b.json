{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\trase\\\\Downloads\\\\Sexto semestre\\\\Proyecto VIII\\\\store\\\\src\\\\components\\\\productList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductList = () => {\n  _s();\n  // Estado para almacenar la lista de productos\n  const [productos, setProductos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Función para obtener la lista de productos desde la API\n  const fetchProductos = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/api/productos/');\n      setProductos(response.data);\n      setLoading(false);\n    } catch (error) {\n      setError(error);\n      setLoading(false);\n    }\n  };\n\n  // Efecto para cargar los productos al montar el componente\n  useEffect(() => {\n    fetchProductos();\n  }, []);\n\n  // Renderizar indicador de carga si se están obteniendo los datos\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando productos...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Renderizar mensaje de error si ocurrió un error al obtener los datos\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error al cargar los productos: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Renderizar la lista de productos\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Productos Disponibles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: productos.map(producto => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [producto.nombre, \" - \", producto.precio]\n      }, producto.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductList, \"lOr/iwIl6dANEm1H7/qrEIuPMFM=\");\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ProductList","_s","productos","setProductos","loading","setLoading","error","setError","fetchProductos","response","get","data","children","fileName","_jsxFileName","lineNumber","columnNumber","message","map","producto","nombre","precio","id","_c","$RefreshReg$"],"sources":["C:/Users/trase/Downloads/Sexto semestre/Proyecto VIII/store/src/components/productList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ProductList = () => {\r\n  // Estado para almacenar la lista de productos\r\n  const [productos, setProductos] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Función para obtener la lista de productos desde la API\r\n  const fetchProductos = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:8000/api/productos/');\r\n      setProductos(response.data);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Efecto para cargar los productos al montar el componente\r\n  useEffect(() => {\r\n    fetchProductos();\r\n  }, []);\r\n\r\n  // Renderizar indicador de carga si se están obteniendo los datos\r\n  if (loading) {\r\n    return <p>Cargando productos...</p>;\r\n  }\r\n\r\n  // Renderizar mensaje de error si ocurrió un error al obtener los datos\r\n  if (error) {\r\n    return <p>Error al cargar los productos: {error.message}</p>;\r\n  }\r\n\r\n  // Renderizar la lista de productos\r\n  return (\r\n    <div>\r\n      <h2>Productos Disponibles</h2>\r\n      <ul>\r\n        {productos.map(producto => (\r\n          <li key={producto.id}>\r\n            {producto.nombre} - {producto.precio}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMa,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,sCAAsC,CAAC;MACxEP,YAAY,CAACM,QAAQ,CAACE,IAAI,CAAC;MAC3BN,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAAC;MACfD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACAT,SAAS,CAAC,MAAM;IACdY,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAIJ,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAa,QAAA,EAAG;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACrC;;EAEA;EACA,IAAIV,KAAK,EAAE;IACT,oBAAOP,OAAA;MAAAa,QAAA,GAAG,iCAA+B,EAACN,KAAK,CAACW,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC9D;;EAEA;EACA,oBACEjB,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BjB,OAAA;MAAAa,QAAA,EACGV,SAAS,CAACgB,GAAG,CAACC,QAAQ,iBACrBpB,OAAA;QAAAa,QAAA,GACGO,QAAQ,CAACC,MAAM,EAAC,KAAG,EAACD,QAAQ,CAACE,MAAM;MAAA,GAD7BF,QAAQ,CAACG,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAAf,EAAA,CA9CKD,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AAgDjB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}