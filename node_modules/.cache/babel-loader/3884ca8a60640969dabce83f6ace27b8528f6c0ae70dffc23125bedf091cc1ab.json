{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\trase\\\\Downloads\\\\Sexto semestre\\\\Proyecto VIII\\\\store\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductList = () => {\n  _s();\n  useEffect(() => {\n    const fetchProduct = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/productos/');\n        console.log(response.data.productos); // Solo mostramos los productos en la consola por ahora\n      } catch (error) {\n        console.error('Error fetching product list:', error);\n      }\n    };\n    fetchProduct(); // Llamamos a la función para obtener los productos al montar el componente\n  }, []); // El segundo argumento del useEffect es un array vacío para asegurar que solo se ejecute una vez al montar el componente\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useEffect","axios","jsxDEV","_jsxDEV","ProductList","_s","fetchProduct","response","get","console","log","data","productos","error","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/trase/Downloads/Sexto semestre/Proyecto VIII/store/src/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport axios from 'axios';\n\nconst ProductList = () => {\n  useEffect(() => {\n    const fetchProduct = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/productos/');\n        console.log(response.data.productos); // Solo mostramos los productos en la consola por ahora\n      } catch (error) {\n        console.error('Error fetching product list:', error);\n      }\n    };\n\n    fetchProduct(); // Llamamos a la función para obtener los productos al montar el componente\n  }, []); // El segundo argumento del useEffect es un array vacío para asegurar que solo se ejecute una vez al montar el componente\n\n  return (\n    <div>\n      {/* Aquí podríamos agregar un mensaje de carga o cualquier otro contenido */}\n    </div>\n  );\n};\n\nexport default ProductList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxBL,SAAS,CAAC,MAAM;IACd,MAAMM,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,sCAAsC,CAAC;QACxEC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC;MACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAEDP,YAAY,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEH,OAAA;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV,CAAC;AAACZ,EAAA,CAnBID,WAAW;AAAAc,EAAA,GAAXd,WAAW;AAqBjB,eAAeA,WAAW;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}